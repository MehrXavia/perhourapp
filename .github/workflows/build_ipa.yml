name: Flutter iOS Build

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build_ios:
    runs-on: macos-latest
    timeout-minutes: 30

    steps:
    # 1. Checkout source code
    - uses: actions/checkout@v4

    # 2. Set up Flutter
    - uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.19.5'
        channel: 'stable'
        cache: true
        cache-key: flutter-ios-${{ hashFiles('pubspec.lock') }}

    # 3. Disable analytics to avoid CLI hang
    - name: Disable Flutter analytics
      run: |
        flutter config --no-analytics
        flutter config --no-cli-animations

    # 4. Recreate Android folder with V2 embedding to avoid plugin failures
    - name: Generate Android folder with V2 embedding
      run: |
        rm -rf android
        flutter create --platforms=android temp_app
        mv temp_app/android ./android
        rm -rf temp_app

    # 5. Fetch Flutter dependencies
    - name: Flutter pub get
      run: |
        echo "Running flutter pub get at $(date)"
        flutter pub get
        echo "Finished flutter pub get at $(date)"

    # 6. Remove android folder (we donâ€™t need it anymore)
    - name: Clean up Android folder
      run: rm -rf android

    # 7. Install CocoaPods
    - name: Setup iOS environment
      run: |
        brew install cocoapods
        sudo gem install cocoapods
        pod setup

    # 8. Install iOS pod dependencies
    - name: Install iOS pods
      run: |
        echo "Running pod install at $(date)"
        cd ios
        pod install --no-repo-update --verbose
        echo "Finished pod install at $(date)"

    # 9. Set up code signing certificate
    - name: Install Apple Certificate
      uses: apple-actions/import-codesign-certs@v2
      with:
        p12-file-base64: ${{ secrets.CERTIFICATE_P12 }}
        p12-password: ${{ secrets.CERTIFICATE_PASSWORD }}
        keychain-name: ios-build-keychain
        keychain-password: ${{ secrets.KEYCHAIN_PASSWORD }}

    # 10. Install Provisioning Profile
    - name: Install Provisioning Profile
      run: |
        mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles/
        echo "${{ secrets.PROVISIONING_PROFILE }}" | base64 --decode > temp.mobileprovision
        UUID=$(/usr/libexec/PlistBuddy -c "Print UUID" /dev/stdin <<< $(security cms -D -i temp.mobileprovision))
        mv temp.mobileprovision ~/Library/MobileDevice/Provisioning\ Profiles/$UUID.mobileprovision
        echo "PROFILE_UUID=$UUID" >> $GITHUB_ENV

    # 11. Build IPA
    - name: Build IPA
      run: |
        cd ios
        xcodebuild -workspace Runner.xcworkspace \
                  -scheme Runner \
                  -configuration Release \
                  -archivePath ../build/Runner.xcarchive \
                  clean archive \
                  CODE_SIGN_STYLE=Manual \
                  PROVISIONING_PROFILE_SPECIFIER=${{ env.PROFILE_UUID }} \
                  DEVELOPMENT_TEAM=${{ secrets.TEAM_ID }}

        xcodebuild -exportArchive \
                  -archivePath ../build/Runner.xcarchive \
                  -exportOptionsPlist ../ExportOptions.plist \
                  -exportPath ../build \
                  -allowProvisioningUpdates

    # 12. Upload IPA artifact for download
    - name: Upload IPA
      uses: actions/upload-artifact@v4
      with:
        name: onservice24-${{ github.run_number }}.ipa
        path: build/Runner.ipa
        retention-days: 7
